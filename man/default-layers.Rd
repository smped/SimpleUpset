% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/defaults.R
\name{default_set_layers}
\alias{default_set_layers}
\alias{default_intersect_layers}
\alias{default_grid_layers}
\title{Define default layers for individual UpSet components}
\usage{
default_set_layers(
  ...,
  fill = NULL,
  f = comma,
  expand = 0.2,
  name = "Set Size",
  dry_run = FALSE
)

default_intersect_layers(
  ...,
  fill = NULL,
  f = comma,
  expand = 0.05,
  name = "Intersection Size",
  dry_run = FALSE
)

default_grid_layers(
  ...,
  colour = NULL,
  fill = NULL,
  light = "grey80",
  dark = "grey23",
  dry_run = FALSE
)
}
\arguments{
\item{...}{additional layers to include alongside default layers.
Will be added after the default layers}

\item{fill}{Column to fill set bars by. Can be 'set' or another column within
the main data object}

\item{f}{Function for labelling set sizes and the set x-axis}

\item{expand}{axis expansion}

\item{name}{Main axis title}

\item{dry_run}{Set as TRUE to view the unevaluated layers which are defined
as the defaults. Additional layers passed through the ellipsis will not be
included as part of a dry_run}

\item{colour}{Primarily used for highlighting points and segments in the
intersections matrix}

\item{light, dark}{default colours for empty intersections (light) and for
both non-empty intersections and segments (dark)}
}
\value{
List of ggplot2 elements
}
\description{
Define and modify default layers for individual UpSet components
}
\details{
These functions define the default layers for inclusion on UpSet plots.
Given the returned object is a simple list, these are easily modifiable using
simple list operations.
Additional themes, guides, scales etc can be easily added using the dot
arguments.

The underlying code for simple modification can be obtained using \code{dry_run = FALSE}
}
\examples{
# View the unevaluated list of default layers for the sets
default_set_layers(dry_run = TRUE)

# Create set layers colouring by set name, and hiding the legend
set_list <- default_set_layers(
  fill = "set", scale_fill_brewer(palette = "Set1"), guides(fill = guide_none())
)
sapply(set_list, is)


}
